/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define ZMK_POINTING_DEFAULT_MOVE_VAL 2000  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        to_fun_layer {
            bindings = <&sl 6>;
            key-positions = <25 34>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <52 28>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <52 27>;
        };

        todefault {
            bindings = <&to 0>;
            key-positions = <32 27>;
        };

        tonavigation {
            bindings = <&to 1>;
            key-positions = <28 31>;
        };

        to_arrows_and_numbers {
            bindings = <&to 4>;
            key-positions = <26 27 28>;
        };

        alt_x {
            bindings = <&kp LA(X)>;
            key-positions = <37 38>;
        };

        ctrl_backspace {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <52 26>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <52 29>;
        };

        docker_layer {
            bindings = <&sl 10>;
            key-positions = <10 11>;
        };
    };

    macros {
        execute: cedilha2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(F2)>;
            label = "CEDILHA2";
        };

        a_acute: a_acute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp A>;
            label = "A_ACUTE";
        };

        e_acute: e_acute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp E>;
            label = "E_ACUTE";
        };

        i_acute: i_acute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp I>;
            label = "I_ACUTE";
        };

        o_acute: o_acute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp O>;
            label = "O_ACUTE";
        };

        u_acute: u_acute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp U>;
            label = "U_ACUTE";
        };

        docker_exec: docker_exec {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp O &kp C &kp K &kp E &kp R &kp SPACE &kp E &kp X &kp E &kp C &kp SPACE &kp MINUS &kp I &kp T &kp SPACE &kp SPACE &kp B &kp A &kp S &kp H &kp LC(LEFT_ARROW) &kp LEFT_ARROW>;
            label = "DOCKER_EXEC";
            wait-ms = <1>;
            tap-ms = <1>;
        };

        docker_logs: docker_logs {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp O &kp C &kp K &kp E &kp R &kp SPACE &kp L &kp O &kp G &kp S &kp SPACE &kp MINUS &kp MINUS &kp T &kp A &kp I &kp L &kp SPACE &kp N1 &kp N0 &kp N0 &kp N0 &kp SPACE &kp MINUS &kp F &kp SPACE>;
            label = "DOCKER_LOGS";
            wait-ms = <1>;
            tap-ms = <1>;
        };

        docker_ps: docker_ps {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp O &kp C &kp K &kp E &kp R &kp SPACE &kp P &kp S &kp SPACE &kp MINUS &kp MINUS &kp F &kp O &kp R &kp M &kp A &kp T &kp SPACE &kp RA(DQT) &kp T &kp A &kp B &kp L &kp E &kp SPACE &kp LBRC &kp LBRC &kp DOT &kp LS(I) &kp LS(D) &kp LS(RIGHT_BRACE) &kp BSLH &kp T &kp LBRC &kp LBRC &kp DOT &kp LS(N) &kp A &kp M &kp E &kp S &kp RBRC &kp BSLH &kp T &kp LBRC &kp LBRC &kp DOT &kp LS(S) &kp T &kp A &kp T &kp U &kp S &kp RBRC &kp RA(DQT) &kp RBRC &kp LS(RIGHT_BRACE) &kp ENTER>;
            label = "DOCKER_PS";
            wait-ms = <1>;
            tap-ms = <1>;
        };

        docker_rm: docker_rm {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp O &kp C &kp K &kp E &kp R &kp SPACE &kp R &kp M &kp SPACE &kp MINUS &kp F &kp SPACE>;
            label = "DOCKER_RM";
        };

        docker_start: docker_start {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp O &kp C &kp K &kp E &kp R &kp SPACE &kp S &kp T &kp A &kp R &kp T &kp SPACE>;
            label = "DOCKER_START";
        };

        docker_stop: docker_stop {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp O &kp C &kp K &kp E &kp R &kp SPACE &kp S &kp T &kp O &kp P &kp SPACE>;
            label = "DOCKER_STOP";
        };

        docker_inspect: docker_inspect {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp O &kp C &kp K &kp E &kp R &kp SPACE &kp I &kp N &kp S &kp P &kp E &kp C &kp T &kp SPACE>;
            label = "DOCKER_INSPECT";
        };
    };

    behaviors {
        e_acentos: e_acentos {
            compatible = "zmk,behavior-tap-dance";
            label = "E_ACENTOS";
            #binding-cells = <0>;
            bindings = <&kp E>, <&e_acute>;
        };

        a_acentos: a_acentos {
            compatible = "zmk,behavior-tap-dance";
            label = "A_ACENTOS";
            #binding-cells = <0>;
            bindings = <&kp A>, <&a_acute>;
        };

        i_acentos: i_acentos {
            compatible = "zmk,behavior-tap-dance";
            label = "I_ACENTOS";
            #binding-cells = <0>;
            bindings = <&kp I>, <&i_acute>;
        };

        o_acentos: o_acentos {
            compatible = "zmk,behavior-tap-dance";
            label = "O_ACENTOS";
            #binding-cells = <0>;
            bindings = <&kp O>, <&o_acute>;
        };

        u_acentos: u_acentos {
            compatible = "zmk,behavior-tap-dance";
            label = "U_ACENTOS";
            #binding-cells = <0>;
            bindings = <&kp U>, <&u_acute>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp LA(LC(Q))  &trans   &kp DELETE  &kp BACKSPACE  &kp LC(BACKSPACE)  &caps_word                                       &trans  &to 6       &kp ENTER      &trans             &trans         &kp CAPSLOCK
&kp ESC        &kp Q    &kp W       &e_acentos     &kp R              &kp T                                            &kp Y   &u_acentos  &i_acentos     &o_acentos         &kp P          &trans
&kp TAB        &lt 1 A  &kp S       &kp D          &kp F              &kp G                                            &kp H   &kp J       &kp K          &kp L              &kp RA(COMMA)  &trans
&kp LSHFT      &kp Z    &kp X       &kp C          &kp V              &lt 9 B     &kp NUMBER_0    &kp LS(PRINTSCREEN)  &kp N   &kp M       &kp COMMA      &kp DOT            &kp FSLH       &kp RSHFT
                        &kp LGUI    &kp LALT       &kp LCTRL          &mo 3       &kp SPACE       &kp SPACE            &mo 4   &mo 5       &kp RIGHT_ALT  &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        mouse_navigation {
            bindings = <
&trans  &trans        &trans     &trans     &trans     &trans                       &trans     &trans          &trans          &trans           &trans          &trans
&trans  &trans        &trans     &trans     &trans     &trans                       &trans     &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &msc SCRL_UP    &trans
&trans  &kp LEFT_ALT  &mo 2      &mkp RCLK  &mkp LCLK  &to 0                        &kp LG(H)  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN  &trans
&trans  &kp LC(Z)     &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(A)  &kp N1    &trans  &trans     &kp LS(GRAVE)   &kp GRAVE       &kp LS(TAB)      &kp TAB         &trans
                      &trans     &trans     &trans     &mo 3      &trans    &trans  &mo 4      &trans          &trans          &trans
            >;
        };

        mouse_navigation_slow {
            bindings = <
&trans  &trans  &trans     &trans         &trans     &trans                    &trans  &trans             &trans             &trans            &trans          &trans
&trans  &trans  &kp SPACE  &kp BACKSPACE  &kp ENTER  &trans                    &trans  &msc SCRL_LEFT     &mmv MOVE_Y(-400)  &msc SCRL_RIGHT   &msc SCRL_UP    &trans
&trans  &trans  &trans     &mkp RCLK      &mkp LCLK  &trans                    &trans  &mmv MOVE_X(-400)  &mmv MOVE_Y(400)   &mmv MOVE_X(400)  &msc SCRL_DOWN  &trans
&trans  &trans  &trans     &trans         &trans     &trans  &kp N2    &trans  &trans  &trans             &trans             &trans            &trans          &trans
                &trans     &trans         &trans     &trans  &to 0     &trans  &trans  &trans             &trans             &trans
            >;
        };

        symbols {
            display-name = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans  &trans           &trans          &trans           &trans                &trans                                   &trans                 &trans                &trans         &trans        &trans      &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN     &kp POUND        &kp DOLLAR            &kp UNDERSCORE                           &kp RA(DOUBLE_QUOTES)  &kp RA(SINGLE_QUOTE)  &kp AMPERSAND  &kp ASTERISK  &kp EQUAL   &trans
&trans  &kp MINUS        &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                    &kp GRAVE              &kp APOS              &kp TILDE      &kp CARET     &kp DELETE  &trans
&trans  &kp PIPE2        &kp PERCENT     &kp LESS_THAN    &kp GREATER_THAN      &kp PLUS               &kp N3    &trans  &kp LBKT               &kp RBKT              &kp SEMI       &kp COLON     &kp BSLH    &trans
                         &trans          &trans           &trans                &trans                 &trans    &trans  &trans                 &trans                &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        nav_and_numbers {
            display-name = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&trans  &trans         &trans  &trans  &trans  &trans                    &kp INS        &trans                &trans          &trans     &trans      &trans
&trans  &trans         &trans  &trans  &trans  &trans                    &kp PG_UP      &kp HOME              &kp UP_ARROW    &kp END    &trans      &trans
&trans  &kp LA(LCTRL)  &trans  &trans  &trans  &trans                    &trans         &kp LEFT_ARROW        &kp DOWN_ARROW  &kp RIGHT  &kp DELETE  &trans
&trans  &trans         &trans  &trans  &trans  &trans  &kp N4    &sl 7   &kp PAGE_DOWN  &trans                &trans          &trans     &trans      &trans
                       &trans  &trans  &trans  &trans  &trans    &trans  &trans         &kp LA(LEFT_CONTROL)  &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        r_numbers {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans        &trans   &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp N7  &kp N8        &kp N9   &kp COLON  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp N4  &kp NUMBER_5  &kp N6   &kp N0     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &kp N5    &trans  &trans  &kp N1  &kp N2        &kp N3   &kp SLASH  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &kp NUMBER_0  &kp DOT
            >;
        };

        fun {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans                    &trans  &kp F24  &kp F14  &mkp MB4  &mkp MB5  &trans
&trans  &trans  &trans  &trans  &trans    &trans                    &trans  &kp F7   &kp F8   &kp F9    &kp F10   &trans
&trans  &trans  &trans  &trans  &execute  &trans                    &trans  &kp F4   &kp F5   &kp F6    &kp F11   &trans
&trans  &trans  &trans  &trans  &trans    &trans  &kp N6    &trans  &trans  &kp F1   &kp F2   &kp F3    &kp F12   &trans
                &trans  &trans  &trans    &mo 1   &trans    &trans  &trans  &trans   &trans   &trans
            >;
        };

        bluetooth {
            bindings = <
&trans  &trans        &trans        &trans        &trans        &trans                          &trans         &trans         &trans         &trans          &trans         &trans
&trans  &trans        &trans        &trans        &trans        &trans                          &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3   &bt BT_DISC 4  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &bt BT_PRV     &bt BT_NXT     &bt BT_CLR     &bt BT_CLR_ALL  &trans         &trans
&trans  &trans        &trans        &trans        &trans        &trans        &kp N7    &trans  &trans         &trans         &trans         &trans          &trans         &trans
                      &trans        &trans        &trans        &trans        &trans    &trans  &trans         &trans         &trans         &trans
            >;
        };

        r_mirror {
            bindings = <
&trans         &trans         &trans   &trans     &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&kp ENTER      &kp P          &kp O    &kp I      &kp U   &kp Y                     &trans  &trans  &trans  &trans  &trans  &trans
&kp BACKSPACE  &kp RA(COMMA)  &kp L    &kp K      &kp J   &kp H                     &trans  &trans  &trans  &trans  &trans  &trans
&trans         &kp SLASH      &kp DOT  &kp COMMA  &kp M   &kp N   &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                              &trans   &trans     &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        vowels {
            bindings = <
&trans  &trans    &trans  &trans    &trans  &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &trans    &trans  &e_acute  &trans  &trans                    &trans  &u_acute  &i_acute  &o_acute  &trans  &trans
&trans  &a_acute  &trans  &trans    &trans  &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &trans    &trans  &trans    &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans    &trans  &trans
                  &trans  &trans    &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;
        };

        docker_layer {
            bindings = <
&trans  &trans  &trans         &trans        &trans        &trans                    &trans  &trans  &trans  &trans        &trans      &trans
&trans  &trans  &trans         &docker_exec  &docker_stop  &trans                    &trans  &trans  &trans  &trans        &docker_ps  &trans
&trans  &trans  &docker_start  &trans        &trans        &trans                    &trans  &trans  &trans  &docker_logs  &trans      &trans
&trans  &trans  &trans         &trans        &trans        &trans  &trans    &trans  &trans  &trans  &trans  &trans        &trans      &trans
                &trans         &trans        &trans        &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
